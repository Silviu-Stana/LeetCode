/**
 * @param {string} s
 * @return {number}
 */
var findTheLongestSubstring = function (s) {
        let maxLength = 0
        let mask = 0 //uoiea -> 00000
        let map = new Map()

        //Keep track of cases when the substring starts from the beginning of the string.
        map.set(0, -1)

        for (let i = 0; i < s.length; i++) {
                if (s[i] === 'a') mask ^= 1 << 0 //00001
                else if (s[i] === 'e') mask ^= 1 << 1 //00010
                else if (s[i] === 'i') mask ^= 1 << 2 //00100
                else if (s[i] === 'o') mask ^= 1 << 3 //01000
                else if (s[i] === 'u') mask ^= 1 << 4 //10000

                if (map.has(mask)) maxLength = Math.max(maxLength, i - map.get(mask))
                else map.set(mask, i)
        }

        return maxLength
}

console.log(findTheLongestSubstring('aaa')) //2
console.log(findTheLongestSubstring('eeeee')) //4
console.log(findTheLongestSubstring('eleetminicoworoep')) //13
console.log(findTheLongestSubstring('bcbcbc')) //6
